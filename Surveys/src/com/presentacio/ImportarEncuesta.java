package com.presentacio;

import com.domini.ExcEncuestaExistente;
import com.domini.ExcFormatoIncorrecto;

import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Clase de vista de importacion de encuesta
 */
public class ImportarEncuesta {
    private ControladorPresentacio ctrlPres;

    private JFrame frame = new JFrame("Importar encuesta");
    private JPanel panel1;
    private JFileChooser fileChooser;

    /**
     * Constructora de la vista de importacion de encuesta
     * @param ctrlPres Referencia al controlador de presentacion
     */
    public ImportarEncuesta(ControladorPresentacio ctrlPres) {
        this.ctrlPres = ctrlPres;
        asignarListeners();
    }

    /**
     * Método para asignar los listeners de la vista.
     */
    public void asignarListeners() {
        FileFilter txt = new FileNameExtensionFilter("txt", "txt");
        fileChooser.setFileFilter(txt);

        fileChooser.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    if (e.getActionCommand().equals(JFileChooser.APPROVE_SELECTION)) {
                        ctrlPres.importarEncuesta(fileChooser.getSelectedFile().getAbsolutePath());
                        close();
                    } else if (e.getActionCommand().equals(JFileChooser.CANCEL_SELECTION)) {
                        close();
                    }
                } catch (ExcFormatoIncorrecto e1) {
                    aviso(e1.getMessage());
                } catch (ExcEncuestaExistente e2) {
                    aviso(e2.getMessage());
                }
            }
        });
    }

    /**
     * Método que lanza un popup de aviso
     * @param mensaje Mensaje que se escribe en el aviso
     */
    public void aviso(String mensaje) {
        JOptionPane optionPane = new JOptionPane(mensaje, JOptionPane.ERROR_MESSAGE);
        String[] strBotones = {"Aceptar"};
        optionPane.setOptions(strBotones);
        JDialog dialogOptionPane = optionPane.createDialog(new JFrame(), "AVISO");
        dialogOptionPane.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialogOptionPane.pack();
        dialogOptionPane.setVisible(true);
    }

    /**
     * Método para visualizar la vista
     */
    public void show() {
        frame.setContentPane(panel1);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * Método para cerrar la vista
     */
    public void close() {
        frame.setVisible(false);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        fileChooser = new JFileChooser();
        panel1.add(fileChooser, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
